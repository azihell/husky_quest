<?xml version="1.0"?>

<robot name="husky" xmlns:xacro="http://ros.org/wiki/xacro">

<!-- Variable assignments -->
<xacro:property name="sup_height"      value="0.2"/>
<xacro:property name="top_to_origin"   value="0.12432"/>

  <!--Velodyne specific variables-->
  <xacro:arg name="gpu"      default="false"/>
  <xacro:property name="gpu" value="$(arg gpu)"/>

<!--.-.-.-.-.- Husky customization -.-.-.-.-.-->

  <!--Velodyne Puck Lite-->
    <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
    
    <VLP-16 parent="Support" name="velodyne" topic="/velodyne_points" hz="10" samples="440" gpu="${gpu}">
      <origin xyz="0 0 ${sup_height-top_to_origin}" rpy="0 0 0"/>
    </VLP-16>

  <!--Velodyne support-->
    <link name="Support">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${sup_height}" radius=".04267"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${sup_height}" radius=".04267"/>
        </geometry>
      </collision>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.32697605"/>
        <inertia ixx="1.02936619e-3"  ixy="3.48319725e-7"  ixz="8.02098638e-7" iyy="6.63318913e-4" iyz="0" izz="1.20173687e-3" />
      </inertial>
     </link>

     <joint name="SupportJoint" type="fixed">
      <parent link="top_plate_link"/>
      <child link="Support"/>
      <origin xyz="0 0 ${sup_height/2}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

  <!--Link to keep RVIZ quiet about the camera TF-->
    <link name="camera_init">
    </link>

    <joint name="CamJoint" type="fixed">
      <parent link="velodyne_base_link"/>
      <child link="camera_init"/>
      <origin xyz="0 0 ${sup_height/2+0.5}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

  <!--Link to the real camera-->
    <link name="real_cam">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://custom_husky/meshes/Camera.stl" scale="4 4 4"/>
        </geometry>
      </visual>
    </link>
    
    <joint name="real_cam_joint" type="fixed">
      <origin xyz="0.2206 0.0 ${0.00635*8.2}" rpy="0 0 0"/>
      <parent link="top_plate_link"/>
      <child link="real_cam"/>
    </joint>
    
    <gazebo reference="real_cam">
      <robotNamespace>/Learnbot</robotNamespace>
      <sensor type="camera" name="Cam01">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>1024</width>
            <height>720</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>husky_cam</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>

</robot>